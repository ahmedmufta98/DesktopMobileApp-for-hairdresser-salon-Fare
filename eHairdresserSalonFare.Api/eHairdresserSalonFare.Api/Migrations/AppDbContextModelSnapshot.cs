// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eHairdresserSalonFareBugojno.DBContext;

namespace eHairdresserSalonFare.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eHairdresserSalonFare.Api.Database.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Associate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("HairdresserSalonId");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserSalonId");

                    b.ToTable("Associates");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HairdresserId");

                    b.Property<int>("HairstyleId");

                    b.Property<DateTime>("ReservationDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserId");

                    b.HasIndex("HairstyleId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Text");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Hairdresser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("HairdresserSalonId");

                    b.Property<byte[]>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("PersonalIdentificationNumber");

                    b.Property<string>("Phone");

                    b.Property<int>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserSalonId");

                    b.ToTable("Hairdressers");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.HairdresserHairstyle", b =>
                {
                    b.Property<int>("HairdresserId");

                    b.Property<int>("HairstyleId");

                    b.HasKey("HairdresserId", "HairstyleId");

                    b.HasIndex("HairstyleId");

                    b.ToTable("HairdresserHairstyles");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.HairdresserSalon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<byte[]>("Logo");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("HairdresserSalons");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Hairstyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name");

                    b.Property<float>("Price");

                    b.HasKey("Id");

                    b.ToTable("Hairstyles");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HairdresserSalonId");

                    b.Property<DateTime>("NotificationDate");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserSalonId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HairdresserId");

                    b.Property<int>("Rate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About");

                    b.Property<string>("Email");

                    b.Property<int>("HairdresserSalonId");

                    b.Property<byte[]>("Logo");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("HairdresserSalonId");

                    b.ToTable("Sponsors");
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankCardNumber");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<byte[]>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eHairdresserSalonFare.Api.Database.Payment", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Associate", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.HairdresserSalon", "HairdresserSalon")
                        .WithMany()
                        .HasForeignKey("HairdresserSalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Booking", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.Hairdresser", "Hairdresser")
                        .WithMany()
                        .HasForeignKey("HairdresserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eHairdresserSalonFareBugojno.Database.Hairstyle", "Hairstyle")
                        .WithMany()
                        .HasForeignKey("HairstyleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eHairdresserSalonFareBugojno.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Comment", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Hairdresser", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.HairdresserSalon", "HairdresserSalon")
                        .WithMany()
                        .HasForeignKey("HairdresserSalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.HairdresserHairstyle", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.Hairdresser", "Hairdresser")
                        .WithMany()
                        .HasForeignKey("HairdresserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eHairdresserSalonFareBugojno.Database.Hairstyle", "Hairstyle")
                        .WithMany()
                        .HasForeignKey("HairstyleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Notification", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.HairdresserSalon", "HairdresserSalon")
                        .WithMany()
                        .HasForeignKey("HairdresserSalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Rating", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.Hairdresser", "Hairdresser")
                        .WithMany()
                        .HasForeignKey("HairdresserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("eHairdresserSalonFareBugojno.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.Sponsor", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.HairdresserSalon", "HairdresserSalon")
                        .WithMany()
                        .HasForeignKey("HairdresserSalonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("eHairdresserSalonFareBugojno.Database.User", b =>
                {
                    b.HasOne("eHairdresserSalonFareBugojno.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
